type Query {
    user(_id: String): User
    post(_id: String): Post
    posts: [Post]
    comment(_id: String): Comment
}

type User {
    _id: ID!
    name: String
    email: String
    gender: String
    birthday: String
    picture: String
    role: Int
    facebookId: String
    facebookEmail: String
    token: String
}

type Post {
    _id: ID!
    title: String
    content: String
    comments: [Comment]
}

type Comment {
    _id: ID!
    postId: String
    content: String
    post: Post
}

type Result {
    success: Boolean
}

type Mutation {
    authorizeUser(accessToken: String): User
    deauthorizeUser(token: String): Result

    createUser(
        name: String,
        email: String,
        facebookId: String,
        facebookEmail: String,
        facebookUsername: String,
        facebookFirstName: String,
        facebookLastName: String): User

    createPost(title: String, content: String): Post
    createComment(postId: String, content: String): Comment
}

schema {
    query: Query
    mutation: Mutation
}